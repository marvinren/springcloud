buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.2.0'
    }
}

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task copyDockerFiles(type: Copy) {
    description = "Copy Dockerfile and required data to build directory"
    from 'src/main/docker'
    from "${project.buildDir}/libs"
    into { "${project.buildDir}/docker" }
    include "*"
    exclude "**/*.yml"
}

task buildDocker(type: DockerBuildImage, dependsOn: 'copyDockerFiles') {
//    if (System.env.DOCKER_HOST) {
//        url = "$System.env.DOCKER_HOST".replace("tcp","https")
//        if (System.env.DOCKER_CERT_PATH) {
//            certPath = new File(System.env.DOCKER_CERT_PATH)
//
//        }
//    }
//    else {
//        url = 'unix:///var/run/docker.sock'
//    }
    url = "tcp://10.12.1.22:2376"
    description = "Package application as Docker image"
    group = "Docker"
    inputDir = project.file("${project.buildDir}/docker")
    tags = ["${project.name}:latest".toString(), "${project.name}:${project.version}".toString()]
}

